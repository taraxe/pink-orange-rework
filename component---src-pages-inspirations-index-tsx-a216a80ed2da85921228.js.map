{"version":3,"file":"component---src-pages-inspirations-index-tsx-a216a80ed2da85921228.js","mappings":"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","sources":["webpack://pink-orange/./src/components/breadcrumb.tsx","webpack://pink-orange/./src/pages/inspirations/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, withPrefix } from \"gatsby\";\n\ntype Props = {\n  items: { label: string; link: string }[];\n};\nconst Breadcrumb: React.FC<Props> = ({ items }) => {\n  return (\n    <nav className=\"flex\" aria-label=\"Breadcrumb\">\n      <ol className=\"inline-flex items-center space-x-1 md:space-x-3\">\n        <li className=\"inline-flex items-center\">\n          <Link\n            to={\"/\"}\n            className=\"inline-flex items-center text-sm font-medium text-gray-700 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white\"\n          >\n            <svg\n              className=\"w-4 h-4 mr-2\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"></path>\n            </svg>\n          </Link>\n        </li>\n        {items.map(({ label, link }, i, arr) => {\n          if (i === arr.length - 1) {\n            return (\n              <li aria-current=\"page\">\n                <div className=\"flex items-center\">\n                  <svg\n                    className=\"w-6 h-6 text-gray-400\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                      clip-rule=\"evenodd\"\n                    ></path>\n                  </svg>\n                  <span className=\"ml-1 text-sm font-medium text-gray-500 md:ml-2 dark:text-gray-400\">\n                    {label}\n                  </span>\n                </div>\n              </li>\n            );\n          } else {\n            return (\n              <li>\n                <div className=\"flex items-center\">\n                  <svg\n                    className=\"w-6 h-6 text-gray-400\"\n                    fill=\"currentColor\"\n                    viewBox=\"0 0 20 20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      fill-rule=\"evenodd\"\n                      d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                      clip-rule=\"evenodd\"\n                    ></path>\n                  </svg>\n                  <Link\n                    to={link}\n                    className=\"ml-1 text-sm font-medium text-gray-700 hover:text-gray-900 md:ml-2 dark:text-gray-400 dark:hover:text-white\"\n                  >\n                    {label}\n                  </Link>\n                </div>\n              </li>\n            );\n          }\n        })}\n      </ol>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n","import { HeadFC, Link, PageProps, withPrefix } from \"gatsby\";\n\nimport Seo from \"../../components/seo\";\nimport { H1, H2, H3, P } from \"../../components/typography\";\nimport * as React from \"react\";\nimport Layout from \"../../components/layout\";\nimport { graphql } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport Breadcrumb from \"../../components/breadcrumb\";\n\nconst Inspirations: React.FC<PageProps<Queries.InspirationListPageQuery>> = ({\n  data,\n  path,\n  pageContext,\n  params,\n}) => {\n  return (\n    <Layout>\n      <div className=\"mb-4\">\n        <Breadcrumb\n          items={[{ label: \"Inspirations\", link: \"/inspirations\" }]}\n        />\n      </div>\n\n      <div className=\"flex flex-col justify-center text-center\">\n        <H1>Trois manières de percevoir le paysage</H1>\n      </div>\n\n      <P>\n        Pink Orange Paysage est aussi une ouverture aux arts. Les travaux\n        paysagers s’inspirent de la richesse de la nature. Les multiples voyages\n        qu’a entrepris Charles Dewing Tyler lui ont permis de retranscrire à\n        travers ses projets toute cette complexité et cette richesse dont nous\n        sommes témoins. Il s’agit avant tout de regarder et de saisir ce qui\n        nous entoure. A travers cette quête, le rôle de la texture est une\n        recherche constante de diversité végétale. La texture permet de\n        multiples interprétations, le toucher n’est pas anodin dans le paysage,\n        c’est ce qui nous lie de manière physique à notre terre. Tout le travail\n        de Charles Dewing Tyler interroge justement cette relation entre l’homme\n        et la nature. L’art environnemental est une réponse à cette question :\n        quels sont les liens de l’homme avec sa mère Nature.\n      </P>\n      <P>\n        Quelques travaux de Charles en photographies, peinture et quelques\n        échantillons de textures végétales…\n      </P>\n\n      <div>\n        <div className=\"col-span-3 grid grid-cols-1 gap-y-6 gap-x-6 sm:grid-cols-2 sm:gap-y-10 md:grid-cols-3 xl:gap-x-8\">\n          {data.inspirations.nodes\n            .map((node) => {\n              return {\n                value: node.name,\n                label: node.childMdx?.frontmatter?.title,\n                description: node.childMdx?.frontmatter?.description,\n                image:\n                  node.childMdx?.frontmatter?.featuredImage?.childImageSharp\n                    ?.gatsbyImageData,\n                excerpt: node.childMdx?.excerpt,\n              };\n            })\n            .map(({ value, label, description, image, excerpt }) => (\n              <div className=\"group relative\">\n                <Link to={`/inspirations/${value}`}>\n                    <H2>{label}</H2>\n\n                    <GatsbyImage\n                    alt={label || value || \"\"}\n                    image={getImage(image || null)!}\n                    objectFit=\"fill\"\n                  />\n                </Link>\n                <H3>{description}</H3>\n                <P>{excerpt}</P>\n              </div>\n            ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\n/*\ninspirations: allMdx(filter: { fields: { source: {eq: \"inspirations\"} }}) {\n         nodes {\n            frontmatter {\n            title\n            description\n                featuredImage {\n                    ... on File {\n                      childImageSharp {\n                        gatsbyImageData(width: 500, height: 500)\n                      }\n                    }\n                }\n            }\n\n        }\n    }\n* */\nexport const query = graphql`\n  query InspirationListPage {\n    inspirations: allFile(\n      filter: { sourceInstanceName: { eq: \"inspirations\" } }\n    ) {\n      nodes {\n        name\n        childMdx {\n          excerpt\n          frontmatter {\n            title\n            description\n            featuredImage {\n              ... on File {\n                childImageSharp {\n                  gatsbyImageData(width: 500, height: 500)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Inspirations;\n\nexport const Head: HeadFC = () => <Seo title=\"Index\" />;\n"],"names":["_ref","items","React","className","Link","to","fill","viewBox","xmlns","d","map","i","arr","label","link","length","data","path","pageContext","params","Layout","Breadcrumb","H1","P","inspirations","nodes","node","value","name","childMdx","_node$childMdx","frontmatter","_node$childMdx$frontm","title","description","_node$childMdx2","_node$childMdx2$front","image","_node$childMdx3","_node$childMdx3$front","featuredImage","_node$childMdx3$front2","childImageSharp","_node$childMdx3$front3","gatsbyImageData","excerpt","_node$childMdx4","_ref2","H2","GatsbyImage","alt","getImage","objectFit","H3","Head","Seo"],"sourceRoot":""}